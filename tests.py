#!/usr/bin/env python3
"""
–ë–´–°–¢–†–´–ï –¢–ï–°–¢–´ –î–õ–Ø CI/CD
"""

import sys
import os

class Calculator:
    def evaluate(self, expression):
        try:
            return eval(expression)
        except ZeroDivisionError:
            raise Exception("–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å")
        except:
            raise Exception("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ")

class HistoryManager:
    def __init__(self):
        self.history = []
    
    def add_record(self, expression, result):
        self.history.append({"expression": expression, "result": result})
    
    def get_history(self):
        return self.history

def run_quick_tests():
    """–ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è CI/CD"""
    print("üß™ –ó–ê–ü–£–°–ö –ë–´–°–¢–†–´–• –¢–ï–°–¢–û–í")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    print("\n1. –¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:")
    calc = Calculator()
    tests = [
        ("2+2", 4),
        ("10-5", 5), 
        ("3*4", 12),
        ("15/3", 5),
        ("2**3", 8)
    ]
    
    for expr, expected in tests:
        result = calc.evaluate(expr)
        status = "‚úÖ" if result == expected else "‚ùå"
        print(f"   {status} {expr} = {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected})")
        if result != expected:
            return False
    
    # –¢–µ—Å—Ç 2: –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
    print("\n2. –¢–µ—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π:")
    history = HistoryManager()
    history.add_record("2+2", 4)
    history.add_record("3*3", 9)
    records = history.get_history()
    
    if len(records) == 2:
        print("   ‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞ 2 –∑–∞–ø–∏—Å–∏")
    else:
        print(f"   ‚ùå –ò—Å—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å 2 –∑–∞–ø–∏—Å–∏, –Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞ {len(records)}")
        return False
    
    # –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç
    print("\n3. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç:")
    calc2 = Calculator()
    history2 = HistoryManager()
    
    result = calc2.evaluate("4+5")
    history2.add_record("4+5", result)
    
    if result == 9 and len(history2.get_history()) == 1:
        print("   ‚úÖ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –∏—Å—Ç–æ—Ä–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –≤–º–µ—Å—Ç–µ")
    else:
        print("   ‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    print("\n4. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫:")
    calc3 = Calculator()
    try:
        calc3.evaluate("10/0")
        print("   ‚ùå –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        return False
    except Exception as e:
        if "–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å" in str(e):
            print("   ‚úÖ –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
    
    try:
        calc3.evaluate("2++2")
        print("   ‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
        return False
    except Exception:
        print("   ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
    
    print("\n" + "=" * 50)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–û –ü–†–û–ô–î–ï–ù–´!")
    print("=" * 50)
    return True

if __name__ == '__main__':
    success = run_quick_tests()
    sys.exit(0 if success else 1)